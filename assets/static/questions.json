[
  {
    "id": 12345678,
    "title": "How do I debounce an input in React?",
    "slug": "how-do-i-debounce-an-input-in-react",
    "body": "I'm trying to debounce a search input so it doesn't fire the API call on every keystroke. I'm using React with hooks. What's the best way to do this?",
    "user": {
      "user_id": 987654,
      "username": "devAlex",
      "reputation": 1520,
      "profile_image": "https://example.com/avatar.png"
    },
    "tags": ["reactjs", "javascript", "hooks", "performance", "debounce"],
    "votes": {
      "upvotes": 45,
      "downvotes": 2
    },
    "created_at": "2025-06-15T13:24:00Z",
    "last_activity_at": "2025-06-16T08:45:00Z",
    "views": 3240,
    "is_answered": true,
    "accepted_answer_id": 87654321,
    "comments": [
      {
        "comment_id": 333,
        "body": "Are you using a specific version of React?",
        "user": {
          "user_id": 555777,
          "username": "frontendNerd"
        },
        "created_at": "2025-06-15T13:30:00Z"
      },
      {
        "comment_id": 334,
        "body": "Do you want to debounce only the API call or also the UI updates?",
        "user": {
          "user_id": 666888,
          "username": "reactRanger"
        },
        "created_at": "2025-06-15T13:35:00Z"
      }
    ],
    "answers": [
      {
        "answer_id": 87654321,
        "body": "Use `useEffect` with a `setTimeout`. Or install lodash and use `_.debounce`. Here's a simple hook:\n\n```js\nimport { useEffect, useState } from 'react';\n\nfunction useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => setDebouncedValue(value), delay);\n    return () => clearTimeout(handler);\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n```\n\nThen use it in your component like this:\n\n```js\nconst debouncedSearch = useDebounce(searchTerm, 500);\n```",
        "user": {
          "user_id": 246810,
          "username": "codeQueen",
          "reputation": 8830
        },
        "created_at": "2025-06-15T14:00:00Z",
        "is_accepted": true,
        "votes": {
          "upvotes": 63,
          "downvotes": 0
        },
        "comments": [
          {
            "comment_id": 444,
            "body": "Nice! This is clean and works perfectly.",
            "user": {
              "user_id": 321000,
              "username": "jsxGuy"
            },
            "created_at": "2025-06-15T15:10:00Z"
          },
          {
            "comment_id": 445,
            "body": "Just a heads up—this will reset the timeout on every render, so make sure your component isn’t updating too often.",
            "user": {
              "user_id": 888999,
              "username": "debugDana"
            },
            "created_at": "2025-06-15T15:15:00Z"
          }
        ]
      }
    ]
  }
]
